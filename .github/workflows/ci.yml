# Run tests

name: CI

on:
  workflow_dispatch:
  # This will run when any branch or tag is pushed
  push:
    branches:
      - "master"
    tags:
      - "v**"
  # Allowing to run on fork and other pull requests
  pull_request:

jobs:
  test-python:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "pypy3.9"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade setuptools
          pip install tox==3.27.*
      - name: Run tests
        run: tox -e py

  check:
    # These checks only need to be done once, not for every python version we
    # support
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          # Use the current version of Python
          python-version: "3.x"
      - name: Install dependencies
        run: |
          pip install -r "requirements.txt"
      - name: Check types
        # individual mypy files for now, until we get the rest
        # of the project typechecking
        run: >-
          mypy
          contract_bridge/user.py
      - name: Check formatting
        run: black --diff --check .

  test-user:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          # Use the current version of Python
          python-version: "3.x"
      - name: Install test dependencies
        run: pip install -r "requirements.txt"
      - name: Run tests
        run: "pytest tests/test_user.py"

  tests:
    runs-on: "ubuntu-latest"
    needs:
      - "check"
      - "test-user"
      - "test-python"
    steps:
      - name: "Everything is good!"
        run: "echo true"
      - name: "Example Get birthday"
        id: "birthday"
        run: >-
          echo "::set-output name=birthday::1986"
      - name: "Example Get gihub ref"
        id: "githubref"
        run: >-
          echo "::set-output name=githubref::${{ github.ref }}"
    outputs:
      birthday: "${{ steps.birthday.outputs.birthday }}"
      githubref: "${{ steps.githubref.outputs.githubref }}"
