[tool.poetry]
authors = ["Mason Lin <mason.lin1@hp.com>"]
description = "code for fun, contract bridge game"
license = "MIT"
name = "contract-bridge"
packages = [{include = "contract_bridge"}]
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
fastapi = "^0.101.1"
python = "^3.9"
tenacity = "^8.2.3"
uvicorn = "^0.23.2"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.5"
black = "^23.7.0"
coverage = "^7.3.0"
ipython = "^8.15.0"
pre-commit = "^3.3.3"
pylama = {extras = ["all"], version = "^8.4.1"}
pytest = "^7.4.0"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-httpx = "^0.23.1"
pytest-mock = "^3.11.1"
pytest-watch = "^4.2.0"
pytest-xdist = "^3.3.1"
safety = "^2.3.5"

[tool.pytest.ini_options]
addopts = "-ra -s -v"
asyncio_mode = "strict"
minversion = "6.0"
norecursedirs = []

[tool.coverage.run]
branch = true

[tool.pylama]
format = "pylint"
linters = "eradicate,mccabe,pycodestyle,pyflakes,pylint,isort"
skip = "*/.env/*,static/*"

[tool.pylama.linter.pyflakes]
builtins = "_"

[tool.pylama.linter.pycodestyle]
ignore = "E203,W503"
max_line_length = 140
statistics = true

[tool.pylama.linter.pylint]
disable = "C,R,W0613,W0703,W0707,W1203"
extension-pkg-whitelist = "pydantic"
max_line_length = 140

[tool.pylama.linter.isort]
line_length = 140
profile = "black"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]
